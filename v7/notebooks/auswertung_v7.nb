(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    110069,       2441]
NotebookOptionsPosition[     57625,       1490]
NotebookOutlinePosition[    103915,       2342]
CellTagsIndexPosition[    103872,       2339]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CIP`CurveFit`"}]}], "Input",
 CellChangeTimes->{{3.9092335777371845`*^9, 3.909233602410754*^9}},
 CellLabel->"In[50]:=",ExpressionUUID->"7c611307-e64f-42bd-b3a3-7d937439c58b"],

Cell[CellGroupData[{

Cell["V7 - Auswertung", "Title",
 CellChangeTimes->{{3.9092286407406254`*^9, 
  3.909228652369108*^9}},ExpressionUUID->"f540d006-b76c-475b-9725-\
efafae05986d"],

Cell[CellGroupData[{

Cell["Import aller Messdaten", "Subsection",
 CellChangeTimes->{{3.909228663688201*^9, 
  3.909228691282731*^9}},ExpressionUUID->"23c42fdf-a6c5-487f-9fab-\
aa2442894a11"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"rawData", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<C:\\\\Users\\\\hannah\\\\github_repos\\\\THERMO-EDA\\\\v7\\\\v7_\
messdaten.csv\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"trawData", "=", 
  RowBox[{
  "Import", "[", 
   "\"\<C:\\\\Users\\\\hannah\\\\github_repos\\\\THERMO-EDA\\\\v7\\\\\
Adsorption.csv\>\"", "]"}]}]}], "Input",
 CellChangeTimes->{{3.909228778442025*^9, 3.9092288377882195`*^9}, {
   3.9092289625504107`*^9, 3.9092289625775166`*^9}, {3.909469168113847*^9, 
   3.90946918698918*^9}, {3.9094694220307765`*^9, 3.909469429354577*^9}, 
   3.9094701170474777`*^9},
 CellLabel->"In[52]:=",ExpressionUUID->"c3a37374-358a-4449-906e-463b4c1b6fae"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"c0\"\>", ",", "\<\"V\"\>", ",", "\<\"VHAc\"\>"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "5.3`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "5.1`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "5.1`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "29.6`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "29.`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "29.6`", ",", "20"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "24.9`", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "24.`", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "23.`", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "13.3`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "12.8`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "13.`", ",", "6"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "18.5`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "19.1`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "18.2`", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "19.1`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "21.6`", ",", "2.5`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "20.6`", ",", "2.5`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.909228972248925*^9, 3.909232768197728*^9, 
  3.9093992466837225`*^9, 3.9094675341026487`*^9, 3.909469448295807*^9, 
  3.9094695065376396`*^9, 3.909469611595502*^9, 3.9094697070066013`*^9, 
  3.909470015875123*^9, 3.9094701219452477`*^9},
 CellLabel->"Out[52]=",ExpressionUUID->"b8e72357-3afb-4e0a-add6-e434ddcd9df6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\<\"Konz [mol / l]\"\>", ",", "\<\"V Titriert [ml]\"\>", 
     ",", "\<\"V Vorgelegt [ml]\"\>", ",", "\<\"A Kohle [g]\"\>"}], "}"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "16.2`", ",", "3", ",", "1.0025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "16.`", ",", "3", ",", "1.0025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.8`", ",", "16.4`", ",", "3", ",", "1.0025`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "13.6`", ",", "4", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "13.8`", ",", "4", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.5`", ",", "13.4`", ",", "4", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "13", ",", "7", ",", "1.003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "13", ",", "9", ",", "1.003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.3`", ",", "13", ",", "5", ",", "1.003`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "12.1`", ",", "10", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "12.3`", ",", "10", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.2`", ",", "12.`", ",", "10", ",", "1.0021`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "11.1`", ",", "20", ",", "1.0007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "11.3`", ",", "20", ",", "1.0007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.1`", ",", "11.`", ",", "20", ",", "1.0007`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "9.`", ",", "40", ",", "1.0001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "9.2`", ",", "40", ",", "1.0001`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05`", ",", "9.4`", ",", "40", ",", "1.0001`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.909228972248925*^9, 3.909232768197728*^9, 
  3.9093992466837225`*^9, 3.9094675341026487`*^9, 3.909469448295807*^9, 
  3.9094695065376396`*^9, 3.909469611595502*^9, 3.9094697070066013`*^9, 
  3.909470015875123*^9, 3.9094701220072145`*^9},
 CellLabel->"Out[53]=",ExpressionUUID->"b151b832-ba62-4a6b-ac02-f7db98a231f3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rawDataT", "=", 
  RowBox[{"Transpose", "[", 
   RowBox[{"Drop", "[", 
    RowBox[{"rawData", ",", "1"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.9094678470964456`*^9, 3.9094678778152795`*^9}},
 CellLabel->"In[54]:=",ExpressionUUID->"aca6701e-cbae-47c3-8cf3-727e046db36a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "0.05`", ",", "0.05`", ",", "0.05`", ",", "0.1`", ",", "0.1`", ",", 
     "0.1`", ",", "0.2`", ",", "0.2`", ",", "0.2`", ",", "0.3`", ",", "0.3`", 
     ",", "0.3`", ",", "0.5`", ",", "0.5`", ",", "0.5`", ",", "0.8`", ",", 
     "0.8`", ",", "0.8`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "5.3`", ",", "5.1`", ",", "5.1`", ",", "29.6`", ",", "29.`", ",", "29.6`",
      ",", "24.9`", ",", "24.`", ",", "23.`", ",", "13.3`", ",", "12.8`", ",",
      "13.`", ",", "18.5`", ",", "19.1`", ",", "18.2`", ",", "19.1`", ",", 
     "21.6`", ",", "20.6`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "20", ",", "10", 
     ",", "10", ",", "10", ",", "6", ",", "6", ",", "6", ",", "4", ",", "4", 
     ",", "4", ",", "2.5`", ",", "2.5`", ",", "2.5`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.9094678620020475`*^9, 3.9094678788842463`*^9}, 
   3.9094694483876667`*^9, 3.909469506616167*^9, 3.9094696118168*^9, 
   3.909469707087184*^9, 3.909470016042495*^9, 3.909470122066903*^9},
 CellLabel->"Out[54]=",ExpressionUUID->"131967a1-b0fb-440e-a6bb-03cb0536cfde"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bestimmung der Gleichgewichtskonzentration", "Subsection",
 CellChangeTimes->{{3.90922784953498*^9, 
  3.909227863138857*^9}},ExpressionUUID->"45a7428c-9cb3-48f8-8c09-\
ed0daf86139c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cg", "[", 
   RowBox[{"c_", ",", "V_"}], "]"}], ":=", 
  RowBox[{"c", "/", "V"}]}]], "Input",
 CellChangeTimes->{{3.909227865760111*^9, 3.9092278682255344`*^9}, {
   3.909227912857683*^9, 3.9092279139734507`*^9}, {3.9092281088670435`*^9, 
   3.909228174061754*^9}, 3.909228393122711*^9, 3.9093992505331893`*^9, {
   3.909467493915612*^9, 3.9094674955374966`*^9}},
 CellLabel->"In[55]:=",ExpressionUUID->"18a721fe-4fb0-4ff3-a2ce-1c716ad48fcb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cgRawData", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"cg", "[", 
       RowBox[{"0.1", ",", "#"}], "]"}], "&"}], ",", 
     RowBox[{"rawDataT", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.909467837419469*^9, 3.9094678398086967`*^9}, {
   3.909467921808564*^9, 3.909467955128281*^9}, {3.909468000724008*^9, 
   3.909468009509321*^9}, {3.909468061565632*^9, 3.9094680711812744`*^9}, 
   3.909468126489788*^9},
 CellLabel->"In[56]:=",ExpressionUUID->"987eeff2-a033-46f7-b91b-729c1394a1cf"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cgDataLangmuir", "=", 
   RowBox[{"1", "/", "cgRawData"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cgDataFreundlich", "=", 
   RowBox[{"Log10", "[", "cgRawData", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.909468077827481*^9, 3.9094681138081303`*^9}},
 CellLabel->"In[57]:=",ExpressionUUID->"c921101b-1b87-4a80-9ea2-70e091f4038a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Bestimmung der Adsorptionsmolalit\[ADoubleDot]t", "Subsection",
 CellChangeTimes->{{3.909228546606881*^9, 
  3.9092285624970765`*^9}},ExpressionUUID->"f0f1bc52-c104-4af8-a225-\
5b96770b165e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mAd", "[", 
   RowBox[{"c0_", ",", "cg_", ",", "VHAc_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{"c0", "-", "cg"}], "VHAc"]}]], "Input",
 CellChangeTimes->{{3.90922825109659*^9, 3.909228418387554*^9}, {
  3.9092328038012886`*^9, 3.909232820085021*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"420fed4e-2ce5-4890-82e8-37f4d0c08326"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mAdData", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", "=", "2"}], ",", 
    RowBox[{"i", "<=", 
     RowBox[{"Length", "[", "rawData", "]"}]}], ",", 
    RowBox[{"i", "++"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"AppendTo", "[", "\[IndentingNewLine]", 
      RowBox[{"mAdData", ",", "\[IndentingNewLine]", 
       RowBox[{"mAd", "[", 
        RowBox[{
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "1"}], "]"}], "]"}], ",", 
         RowBox[{"cgRawData", "[", 
          RowBox[{"[", 
           RowBox[{"i", "-", "1"}], "]"}], "]"}], ",", 
         RowBox[{"rawData", "[", 
          RowBox[{"[", 
           RowBox[{"i", ",", "3"}], "]"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"mAdDataLangmuir", "=", 
  RowBox[{"1", "/", "mAdData"}]}], "\[IndentingNewLine]", 
 RowBox[{"mAdDataFreundlich", "=", 
  RowBox[{"Log10", "[", "mAdData", "]"}]}]}], "Input",
 CellChangeTimes->{{3.9092312637848845`*^9, 3.9092312897672005`*^9}, {
   3.9092315595585003`*^9, 3.909231668245913*^9}, {3.9092317233782997`*^9, 
   3.9092318953103304`*^9}, {3.909231945620588*^9, 3.909231956478226*^9}, {
   3.9092321741031203`*^9, 3.909232174186041*^9}, {3.909232248648299*^9, 
   3.9092322519038744`*^9}, {3.909232282565606*^9, 3.9092322956722555`*^9}, {
   3.909232606988702*^9, 3.909232607123396*^9}, {3.9092328474877005`*^9, 
   3.9092328564310627`*^9}, {3.90923291261808*^9, 3.9092329154137964`*^9}, {
   3.9092330163552322`*^9, 3.9092330473313017`*^9}, 3.9092330891820583`*^9, {
   3.9092331525354056`*^9, 3.9092331763004713`*^9}, {3.9093992736467247`*^9, 
   3.909399283660857*^9}, {3.909400217660288*^9, 3.909400219292739*^9}, {
   3.9094002579158707`*^9, 3.9094002582720957`*^9}, {3.9094029246320157`*^9, 
   3.9094029617991657`*^9}, {3.909403708605817*^9, 3.9094037087678347`*^9}, {
   3.9094593962449303`*^9, 3.909459477022244*^9}, {3.9094628325839653`*^9, 
   3.9094628630575314`*^9}, {3.909467967559454*^9, 3.9094679962891483`*^9}, {
   3.9094682194226494`*^9, 3.9094682498611765`*^9}},
 CellLabel->"In[60]:=",ExpressionUUID->"b665598e-dd9e-4078-9649-557c870ba151"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "642.4242424242424`", ",", "658.0645161290322`", ",", "658.0645161290322`", 
   ",", "206.99300699300696`", ",", "207.14285714285714`", ",", 
   "206.99300699300696`", ",", "51.02459016393442`", ",", 
   "51.06382978723404`", ",", "51.11111111111111`", ",", "20.51413881748072`",
    ",", "20.534759358288774`", ",", "20.52631578947369`", ",", 
   "8.087431693989071`", ",", "8.084656084656086`", ",", "8.088888888888889`",
    ",", "3.14558629776021`", ",", "3.1431897555296855`", ",", 
   "3.1440781440781436`"}], "}"}]], "Output",
 CellChangeTimes->{
  3.9092331808773813`*^9, 3.9093992635124483`*^9, {3.909400235683649*^9, 
   3.9094002592952275`*^9}, {3.909402939726389*^9, 3.909402963547025*^9}, 
   3.9094593264038496`*^9, 3.909459603556617*^9, 3.909462865153438*^9, 
   3.909467534363061*^9, 3.909467971171318*^9, {3.90946822956487*^9, 
   3.909468251731537*^9}, 3.909469448455693*^9, 3.9094695066963677`*^9, 
   3.9094696119584312`*^9, 3.909469707175042*^9, 3.909470016115839*^9, 
   3.90947012214503*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"d9d44191-d3b4-44b3-af48-d1b4128c25b7"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.807821921050864`"}], ",", 
   RowBox[{"-", "2.818268473591626`"}], ",", 
   RowBox[{"-", "2.818268473591626`"}], ",", 
   RowBox[{"-", "2.315955673593877`"}], ",", 
   RowBox[{"-", "2.316269962220718`"}], ",", 
   RowBox[{"-", "2.315955673593877`"}], ",", 
   RowBox[{"-", "1.7077795250930257`"}], ",", 
   RowBox[{"-", "1.7081133837758886`"}], ",", 
   RowBox[{"-", "1.7085153222422491`"}], ",", 
   RowBox[{"-", "1.3120532900250217`"}], ",", 
   RowBox[{"-", "1.312489617831032`"}], ",", 
   RowBox[{"-", "1.3123110060736702`"}], ",", 
   RowBox[{"-", "0.907810625664528`"}], ",", 
   RowBox[{"-", "0.907661550066427`"}], ",", 
   RowBox[{"-", "0.9078888698737123`"}], ",", 
   RowBox[{"-", "0.4977016043603035`"}], ",", 
   RowBox[{"-", "0.49737060032774494`"}], ",", 
   RowBox[{"-", "0.4974933316167913`"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.9092331808773813`*^9, 3.9093992635124483`*^9, {3.909400235683649*^9, 
   3.9094002592952275`*^9}, {3.909402939726389*^9, 3.909402963547025*^9}, 
   3.9094593264038496`*^9, 3.909459603556617*^9, 3.909462865153438*^9, 
   3.909467534363061*^9, 3.909467971171318*^9, {3.90946822956487*^9, 
   3.909468251731537*^9}, 3.909469448455693*^9, 3.9094695066963677`*^9, 
   3.9094696119584312`*^9, 3.909469707175042*^9, 3.909470016115839*^9, 
   3.9094701221586485`*^9},
 CellLabel->"Out[63]=",ExpressionUUID->"d78fe310-c4af-4e6c-ad46-423eb37d5db1"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["X, Y - Liste", "Subsection",
 CellChangeTimes->{{3.9092517967995872`*^9, 3.909251822497774*^9}, 
   3.909257405609253*^9},ExpressionUUID->"27460db7-2624-4277-8517-\
f946d3618a5f"],

Cell[CellGroupData[{

Cell["Berechnung der Mittelwerte", "Subsubsection",
 CellChangeTimes->{{3.909257432093683*^9, 
  3.9092574495550833`*^9}},ExpressionUUID->"24d7974a-bba6-4d7f-9a4b-\
80dd7b6a356c"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cgMeanDataLangmuir", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"cgDataLangmuir", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cgMeanDataFreundlich", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"cgDataFreundlich", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mAdMeanDataLangmuir", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"mAdDataLangmuir", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mAdMeanDataFreundlich", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Mean", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"mAdDataFreundlich", ",", "3"}], "]"}]}], "]"}]}]}], "Input",
 CellLabel->"In[64]:=",ExpressionUUID->"d6667419-6e4f-4c31-8af7-95d8fce2562b"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "51.66666666666666`", ",", "294.`", ",", "239.66666666666666`", ",", 
   "130.33333333333334`", ",", "186.`", ",", "204.33333333333334`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9094694485118427`*^9, 3.9094695067644734`*^9, 
  3.9094696120529804`*^9, 3.9094697072299*^9, 3.9094700161829557`*^9, 
  3.9094701222153406`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"4593ff58-e160-4272-ae18-34a65d843020"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.7131387405988872`"}], ",", 
   RowBox[{"-", "2.468327140005611`"}], ",", 
   RowBox[{"-", "2.3793794749416453`"}], ",", 
   RowBox[{"-", "2.115001654307264`"}], ",", 
   RowBox[{"-", "2.2694254945452723`"}], ",", 
   RowBox[{"-", "2.3097847795892705`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9094694485118427`*^9, 3.9094695067644734`*^9, 
  3.9094696120529804`*^9, 3.9094697072299*^9, 3.9094700161829557`*^9, 
  3.909470122227769*^9},
 CellLabel->"Out[65]=",ExpressionUUID->"23ce1068-2703-4b72-bad2-a4e58a40192c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "652.851091560769`", ",", "207.04295704295703`", ",", "51.06651035409319`", 
   ",", "20.525071321747728`", ",", "8.086992222511348`", ",", 
   "3.144284732456013`"}], "}"}]], "Output",
 CellChangeTimes->{3.9094694485118427`*^9, 3.9094695067644734`*^9, 
  3.9094696120529804`*^9, 3.9094697072299*^9, 3.9094700161829557`*^9, 
  3.9094701222416596`*^9},
 CellLabel->"Out[66]=",ExpressionUUID->"e2126b21-cce9-4a31-8255-f840e696c4b8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "2.8147862894113724`"}], ",", 
   RowBox[{"-", "2.3160604364694906`"}], ",", 
   RowBox[{"-", "1.7081360770370544`"}], ",", 
   RowBox[{"-", "1.3122846379765745`"}], ",", 
   RowBox[{"-", "0.9077870152015558`"}], ",", 
   RowBox[{"-", "0.4975218454349466`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.9094694485118427`*^9, 3.9094695067644734`*^9, 
  3.9094696120529804`*^9, 3.9094697072299*^9, 3.9094700161829557`*^9, 
  3.9094701222436724`*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"7d527121-48fd-4535-912d-18c2ea7befae"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Berechnung der Standardabweichungen", "Subsubsection",
 CellChangeTimes->{{3.909257457657448*^9, 
  3.9092574718962708`*^9}},ExpressionUUID->"5195828b-f612-4b7c-be22-\
e927faea779a"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"cgSdDataLangmuir", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"cgDataLangmuir", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cgSdDataFreundlich", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"cgDataFreundlich", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mAdSdDataLangmuir", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"mAdDataLangmuir", ",", "3"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"mAdSdDataFreundlich", "=", 
  RowBox[{"Map", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"StandardDeviation", "[", "#", "]"}], "&"}], ",", 
    RowBox[{"Partition", "[", 
     RowBox[{"mAdDataFreundlich", ",", "3"}], "]"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.9094685475635653`*^9, 3.9094685711949434`*^9}},
 CellLabel->"In[68]:=",ExpressionUUID->"05f85088-e8ec-49ad-9007-a7b724fa560e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1.1547005383792515`", ",", "3.4641016151377544`", ",", 
   "9.504384952922154`", ",", "2.516611478423583`", ",", "4.582575694955855`",
    ",", "12.5830573921179`"}], "}"}]], "Output",
 CellChangeTimes->{3.9094685729620047`*^9, 3.9094694527155957`*^9, 
  3.909469510895445*^9, 3.9094696121634417`*^9, 3.90946970730168*^9, 
  3.90947001627604*^9, 3.909470122310975*^9},
 CellLabel->"Out[68]=",ExpressionUUID->"e8ab403a-7191-4167-9974-2174306dab15"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.009645036640871369`", ",", "0.005134787687011308`", ",", 
   "0.017250801313920087`", ",", "0.008371159323373116`", ",", 
   "0.01066117911020942`", ",", "0.026943164181891226`"}], "}"}]], "Output",
 CellChangeTimes->{3.9094685729620047`*^9, 3.9094694527155957`*^9, 
  3.909469510895445*^9, 3.9094696121634417`*^9, 3.90946970730168*^9, 
  3.90947001627604*^9, 3.909470122320252*^9},
 CellLabel->"Out[69]=",ExpressionUUID->"e7dbd396-f8c8-4687-80ee-132363a74be8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "9.02991623365983`", ",", "0.08651602435410773`", ",", 
   "0.043322715220800244`", ",", "0.01036644590710186`", ",", 
   "0.0021503509720758756`", ",", "0.0012115538510833696`"}], "}"}]], "Output",
 CellChangeTimes->{3.9094685729620047`*^9, 3.9094694527155957`*^9, 
  3.909469510895445*^9, 3.9094696121634417`*^9, 3.90946970730168*^9, 
  3.90947001627604*^9, 3.9094701223266735`*^9},
 CellLabel->"Out[70]=",ExpressionUUID->"d3c5fc39-5140-4fa5-873f-91869a332713"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.006031319921512503`", ",", "0.00018145462330990039`", ",", 
   "0.0003684231253302306`", ",", "0.00021935575210774782`", ",", 
   "0.00011548447587177084`", ",", "0.00016733408428005979`"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.9094685729620047`*^9, 3.9094694527155957`*^9, 
  3.909469510895445*^9, 3.9094696121634417`*^9, 3.90946970730168*^9, 
  3.90947001627604*^9, 3.9094701223447933`*^9},
 CellLabel->"Out[71]=",ExpressionUUID->"88fe9481-41da-4438-8995-ceb568b182e6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["CIP Integration f\[UDoubleDot]r Langmuir-Modell", "Subsection",
 CellChangeTimes->{{3.909233504949712*^9, 3.909233515007411*^9}, {
  3.9094028257994895`*^9, 
  3.9094028328887453`*^9}},ExpressionUUID->"7d5d36d6-8c98-44df-99d9-\
0304b3ef53ea"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xyErrorTriple1L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTriple2L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTriple3L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTriple4L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTriple5L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTriple6L", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataLangmuir", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataLangmuir", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataLangmuir", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"xyErrorTripleDataL", "=", 
   RowBox[{"{", 
    RowBox[{
    "xyErrorTriple1L", ",", "xyErrorTriple2L", ",", "xyErrorTriple3L", ",", 
     "xyErrorTriple4L", ",", "xyErrorTriple5L", ",", "xyErrorTriple6L"}], 
    "}"}]}], ";"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.909257822883129*^9, 3.9092578638459167`*^9}, {
  3.9092579464795804`*^9, 3.909258200285906*^9}, {3.9094601851744013`*^9, 
  3.9094602567003994`*^9}, {3.9094614375897894`*^9, 3.9094614658131037`*^9}, {
  3.9094630652154493`*^9, 3.9094630724301405`*^9}, {3.9094631041396294`*^9, 
  3.9094631298775244`*^9}, {3.9094703531237726`*^9, 3.909470408760458*^9}},
 CellLabel->
  "In[125]:=",ExpressionUUID->"1ab91db4-c516-4b5a-99b8-2c88d510dfb0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"xyErrorTripleDataL", "=", 
  RowBox[{"{", 
   RowBox[{
   "xyErrorTriple4L", ",", "xyErrorTriple5L", ",", "xyErrorTriple6L"}], 
   "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelFunction", "=", 
   RowBox[{
    RowBox[{"a", " ", "x"}], "+", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"argumentOfModelFunction", "=", "x"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parametersOfModelFunction", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curveFitInfoModel", "=", 
   RowBox[{"CIP`CurveFit`FitModelFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
    "xyErrorTripleDataL", ",", "\[IndentingNewLine]", "modelFunction", ",", 
     "\[IndentingNewLine]", "argumentOfModelFunction", ",", 
     "\[IndentingNewLine]", "parametersOfModelFunction"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CIP`CurveFit`ShowFitResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<FunctionPlot\>\"", ",", "\"\<ModelFunction\>\"", ",", 
     "\"\<RMSE\>\""}], "}"}], ",", "\[IndentingNewLine]", 
   "xyErrorTripleDataL", ",", "\[IndentingNewLine]", "curveFitInfoModel"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"CIP`CurveFit`ShowFitResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<AbsoluteResidualsPlot\>\"", ",", "\"\<SDFit\>\"", ",", 
     "\"\<CorrelationCoefficient\>\""}], "}"}], ",", "\[IndentingNewLine]", 
   "xyErrorTripleDataL", ",", "\[IndentingNewLine]", "curveFitInfoModel"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.909258239523904*^9, 3.9092583038138027`*^9}, {
   3.909461472706692*^9, 3.9094614817642584`*^9}, {3.909470396190996*^9, 
   3.9094704274525957`*^9}, {3.909470495121539*^9, 3.90947049957508*^9}, 
   3.909470537332529*^9, {3.909470988788623*^9, 3.9094709900010657`*^9}},
 CellLabel->
  "In[191]:=",ExpressionUUID->"b69151d1-9226-47db-a1b6-7020572e82b9"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "130.33333333333334`", ",", "20.525071321747728`", ",", 
     "0.01036644590710186`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "186.`", ",", "8.086992222511348`", ",", "0.0021503509720758756`"}], 
    "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "204.33333333333334`", ",", "3.144284732456013`", ",", 
     "0.0012115538510833696`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.909470411274579*^9, 3.909470427953529*^9}, 
   3.9094705003973775`*^9, 3.9094705391871157`*^9, 3.9094709905057526`*^9},
 CellLabel->
  "Out[191]=",ExpressionUUID->"ff877c36-34b6-49c1-b05a-428b2e4846b1"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[0.005], Opacity[1.], LineBox[CompressedData["
1:eJwVjn1Q0wUYx+dvLBZKKA7ESE/eh7yOIfEyxldBSRg0IDkTRnvffiACJony
koaUIBDB4vBMCBEDDWm8HWSHCHYTOIXyBRCxwEkT1OMGwSki/frjueeee76f
z/PYSdNiFQSNRgul6v/unnA4u7ZUjI8XC9L08h0wFo6JY+vFsA5KGDb67cBP
Mo2J6JEY5Y+760/ofKH2fyy8ZiHBgZjsw3mf+cJp/Y3vleESaHpla3UvuXgW
6DdvnifBHcvKqS0nuOgSB75iaiWI97HT6m24KCgcWRIaJIgWjkYuNvhA1ESv
eW4rRVmwYeIofMBz7E06FS3Fg3d3XTV9yMGm6s2byAIpiu/pIqaSOXhrScuq
7ZSi9NClx+50DqaKvvzDeU4KmqmW31vujdv7vgttcJbhcB5jQuHojT5bn6Tc
T2WQFymeGo97oUOfklFTJsNNlk1j8zlPtDf4eljdlKEzOCdBMOiBX9IqJ0eW
ZdDI/C/lPXNHS2HR1UofOdLDT6feXuuOnmpzx0aFHPr+Qoc3PDcMdLiWM8/L
4b/3SUZP4nb83X+v4dqwHI6ql1flZ1yx4mU5mkxXgBVaonbqZsP6rGFVGaiA
wfbUr9l/uSBoJWq4I1UBYYX7stbCBSK54GxcvQJVph73cj2dUbB14vjzcSof
cMNVGeOErrtvTMbeU2LYzPSQZ74jZs60f2O5RwnN6MWI4joHOIestNQcU2Ih
bMFq4E97kLtHFtk/K/FJ2ojI8R17NEZHcFenlKiqtOSz2HZYiBXYuFqrcCRx
dZ1+/zbwDvzzb02UCmL+aUP53FaUJW7IST6pAnNNpmZL1BbMaG+/z2lToTOk
MGBSa4udZg4tYbMqsLOiLIbnN+OiyNR4Zasat14c6c2LswG97dR2cbwabJHg
0v4ya5AiTfb6EjWqPorMT7nPwvgabiarRw3vjKZgvv9G7G1MVimW1DhdcZ3N
y9qAvkgOYeZGwnuanJq/YoGwnUXtl0UkhOfrFJNH16E3IEdSpSExFx4c4fSW
iUiPlfYxHQla6vlnhusMKEsSKrpvUfzBoO5ULQNfvehKr+un+JSxcuMFBjqb
vnBLHSTRQ1rx3hQw4Ow59yNtiMQJZUmphYABmteTMy4PSGwT53L9Rk3Q5t0v
ydRTfJwoN3+OjqEyl5ADT6l87HIMc4qOmbmCD0KmKV/MWeeSu3TYaXeNMA0U
L7w/VNlBRynnN8EPs9S/gij7yzl0qH2aP+wzUvyeYN0wk478cnOrhnmK3z1+
bt9rAtXGFGPxApUPO5b+cJbA/RZ2U/widT+0fbP+DoFd3Av2M68oPzwOLmkI
iCpotKHX1D5kEDlfE8iaT5poXSZRxiet1mQRaG61rcpdoXy8+m6zBAIDG49n
St9SPC+04lsBgenPR2PDV0kgaFLF4hOQhv4eN0vNXbraR61cAv8BiPnXIw==

       "]]},
     Annotation[#, "Charting`Private`Tag$8500#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{126.63333499455811`, 2.275245402991432},
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 10, FontWeight -> "Plain"},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.03], 
    RGBColor[0, 0, 1, 0.8], 
    PointBox[{{130.33333333333334`, 20.525071321747728`}, {186., 
     8.086992222511348}, {204.33333333333334`, 3.144284732456013}}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"y\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"x\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data above model function\"", TraditionalForm],
  PlotRange->{{126.63333499455783`, 208.03333167210883`}, {
   2.2752454029914273`, 21.394110651212312`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.909470990584749*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"0b4f7dc7-39a5-4529-9db5-5aec98d6ebed"],

Cell[BoxData[
 RowBox[{"54.918372379809476`", "\[VeryThinSpace]", "-", 
  RowBox[{"0.25309502726023575`", " ", "x"}]}]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.909470990600348*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"23bc12bf-c900-4851-abba-f5bb7fde0a06"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Root mean squared error (RMSE) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox[
      RowBox[{"\<\"8.249\"\>", "\[Times]", 
       SuperscriptBox["10", "\<\"-1\"\>"]}],
      ShowStringCharacters->False],
     0.8249358688046079,
     AutoDelete->True],
    ScientificForm[#, 4]& ]}],
  SequenceForm["Root mean squared error (RMSE) = ", 
   ScientificForm[0.8249358688046079, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.9094709906203237`*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"4112f7c3-89ee-492f-b312-499bc9c30238"],

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., -1.4065825051443532`}, {2., 
    0.24429491310571905`}, {3., -0.058337077178622465`}, {1., 0.}, {2., 0.}, {
    3., 0.}, {1., -1.4065825051443532`}, {2., 0.24429491310571905`}, {
    3., -0.058337077178622465`}}, {{{}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.3], LineBox[{4, 1}], LineBox[{6, 3}]}, 
      {RGBColor[0, 0, 1], Opacity[0.3], LineBox[{5, 2}]}}, 
     {RGBColor[0, 0, 1], PointSize[0.03], AbsoluteThickness[1.6], Opacity[
      0.8], 
      StyleBox[PointBox[{7, 8, 9}],
       FontFamily->"Helvetica",
       FontSize->10,
       FontWeight->"Plain"]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.900000000000002, 0},
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 10, FontWeight -> "Plain"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"y - f(x)\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Index of residual\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Absolute residuals\"", TraditionalForm],
  PlotRange->{{0.9, 3.1}, {-1.489126376056857, 0.32683878401822264`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[0.005], 
    GrayLevel[0], 
    LineBox[{{1., 0.}, {3, 0.}}]},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.9094709907140827`*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"4e3511b8-f874-4417-8c08-c2b0b50a785d"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Standard deviation of fit = \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox[
      RowBox[{"\<\"3.336\"\>", "\[Times]", 
       SuperscriptBox["10", "\<\"-1\"\>"]}],
      ShowStringCharacters->False],
     0.33357851278412537`,
     AutoDelete->True],
    ScientificForm[#, 4]& ]}],
  SequenceForm["Standard deviation of fit = ", 
   ScientificForm[0.33357851278412537`, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.909470990726735*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"0a15ce81-cbf5-44f7-8f29-4b025163d6fd"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Out \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" : Correlation coefficient = \"\>", 
   "\[InvisibleSpace]", "0.9992232839788757`"}],
  SequenceForm["Out ", 1, " : Correlation coefficient = ", 0.9992232839788757],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.909469707917311*^9, 3.909470016737357*^9, 3.909470122577411*^9, {
   3.909470368036694*^9, 3.909470428037857*^9}, 3.9094705004923086`*^9, 
   3.9094705392700205`*^9, 3.909470990742414*^9},
 CellLabel->
  "During evaluation of \
In[191]:=",ExpressionUUID->"dde96445-c273-4700-aab8-35f7e7f6cd0a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"mAdMax", "=", 
  FractionBox["1", "54.918372379809476`"]}], "\[IndentingNewLine]", 
 RowBox[{"b", "=", 
  FractionBox["1", 
   RowBox[{
    RowBox[{"-", "0.25309502726023575`"}], "*", "mAdMax"}]]}]}], "Input",
 CellChangeTimes->{{3.90947131481312*^9, 3.909471380345925*^9}},
 CellLabel->
  "In[199]:=",ExpressionUUID->"2f79fa06-b781-48f3-8673-c8877f4bcd1a"],

Cell[BoxData["0.018208842627092242`"], "Output",
 CellChangeTimes->{{3.9094713533162603`*^9, 3.90947138149848*^9}},
 CellLabel->
  "Out[199]=",ExpressionUUID->"b6cc7904-6e33-4dbe-ac57-145a1f3ce6c4"],

Cell[BoxData[
 RowBox[{"-", "216.98716475903598`"}]], "Output",
 CellChangeTimes->{{3.9094713533162603`*^9, 3.9094713815157714`*^9}},
 CellLabel->
  "Out[200]=",ExpressionUUID->"537463ba-39d9-46b8-9a11-4b82c07cd62c"]
}, Open  ]],

Cell["\<\
m_ad_max = 0,0182088
b = -216.987
R^2 = 0,999223
\[OpenCurlyDoubleQuote]Ausrei\[SZ]er\[CloseCurlyDoubleQuote] : 0.05; 0,1; 0,2\
\>", "Text",
 CellChangeTimes->{{3.9094712798160753`*^9, 3.9094713040883307`*^9}, {
  3.9094713921326227`*^9, 3.9094714281629744`*^9}, {3.9094717266252904`*^9, 
  3.909471742117362*^9}},ExpressionUUID->"f2086461-0e9b-4f2d-9f48-\
919132d508c4"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
CIP Integration f\[UDoubleDot]r Freundlich - Modell
\
\>", "Subsection",
 CellChangeTimes->{{3.9094603396694217`*^9, 3.9094603835006714`*^9}, {
  3.9094604363019032`*^9, 
  3.9094604384633646`*^9}},ExpressionUUID->"cef898eb-7914-4c59-8bc6-\
9e60a6bcdede"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"xyErrorTriple1F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "1", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTriple2F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "2", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTriple3F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "3", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "3", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTriple4F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "4", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "4", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTriple5F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "5", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "5", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTriple6F", "=", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"cgMeanDataFreundlich", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"mAdMeanDataFreundlich", "[", 
      RowBox[{"[", "6", "]"}], "]"}], ",", 
     RowBox[{"mAdSdDataFreundlich", "[", 
      RowBox[{"[", "6", "]"}], "]"}]}], "}"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"xyErrorTripleDataF", "=", 
   RowBox[{"{", 
    RowBox[{
    "xyErrorTriple1F", ",", "xyErrorTriple2F", ",", "xyErrorTriple3F", ",", 
     "xyErrorTriple4F", ",", "xyErrorTriple5F", ",", "xyErrorTriple6F"}], 
    "}"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.9094604305233493`*^9, 3.909460430525354*^9}, {
  3.909461342082495*^9, 3.909461426735498*^9}, {3.9094615043320384`*^9, 
  3.9094615409065275`*^9}, {3.9094631497880774`*^9, 3.909463175074576*^9}, {
  3.9094708262446375`*^9, 3.9094708309310875`*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"52f7fff0-1f71-4802-aff0-3aa863968205"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xyErrorTripleDataF", "=", 
   RowBox[{"{", 
    RowBox[{
    "xyErrorTriple2F", ",", "xyErrorTriple3F", ",", "xyErrorTriple4F", ",", 
     "xyErrorTriple5F", ",", "xyErrorTriple6F"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"modelFunction", "=", 
   RowBox[{
    RowBox[{"a", " ", "x"}], "+", "b"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"argumentOfModelFunction", "=", "x"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"parametersOfModelFunction", "=", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"curveFitInfoModel", "=", 
   RowBox[{"CIP`CurveFit`FitModelFunction", "[", "\[IndentingNewLine]", 
    RowBox[{
    "xyErrorTripleDataF", ",", "\[IndentingNewLine]", "modelFunction", ",", 
     "\[IndentingNewLine]", "argumentOfModelFunction", ",", 
     "\[IndentingNewLine]", "parametersOfModelFunction"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"CIP`CurveFit`ShowFitResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<FunctionPlot\>\"", ",", "\"\<ModelFunction\>\"", ",", 
     "\"\<RMSE\>\""}], "}"}], ",", "\[IndentingNewLine]", 
   "xyErrorTripleDataF", ",", "\[IndentingNewLine]", "curveFitInfoModel"}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.909461559948104*^9, 3.909461570998722*^9}, {
  3.909470914117038*^9, 3.9094709368241262`*^9}},
 CellLabel->
  "In[184]:=",ExpressionUUID->"5b077003-be5f-4c7a-bcb8-272281a68d68"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {GrayLevel[0], Thickness[0.005], Opacity[1.], LineBox[CompressedData["
1:eJwV0Hs41FkYB/DfpbAYZsnGasule21NpXJJRFYqmsYlDbWjCz1aGa2tjYgk
5dKDR6WbpLJWtsWzO0/r9h6rdc0lrEt+gyEaVK6NmTGTPfvHec7zed7zPe97
jvmxUN5JiiAId7z+3y312y5zB2lklnG+0dpUDel/UAsMsK89P/51tIkaCP7m
+LYBGklrDwRVLVYD8yQtwQc7T72K9FikhgxbbrK/hEarg7qsjrPUoBHYePNU
H42sbW3up8yrQFpWkxfTQyNuvzJ4YFAFBcFlTYVtNBKuj9ZKLlCBrlHRM/Q3
jTg10exUKxXkJ3ZLxovx/VKX2wkv5+DEbGvcmcd4vpK3oiKfOZAVd4rup9OI
uBH1OLlPCdU2bOfRyzTKljJ6fkIlhOh7Cd6FYbtsc30zqwAOc2pkSwA2L8g4
OVYBm8KLGh4epJHv8NFTmwwV8IXfQodSRxrFXOTGJ9yTgxkrRUfGoZHgjpb5
63Vy8BQNOceY08gxMNPbvWIWjjx3Y5Ww8f9stTgU4ToLT8MkGw1JGqUmne28
2yWDl3FXBk0nKCQfLFv+g0AG88lyKryPQr7ve7WFo5/gQkB25FgzhWIia0KD
Ln6C+iue8QZAITYr/5H+wk9w+Edbqe/vFBKs8OQ9uzkDULie8cjCdUdZ8+yS
Gdg1NG6XkUIhpB02fC53Gsih4Rl5FIVW+xdHjmyfhjtbRnayQihEFH4Q66Ip
CHVfNuB4hEKpieMVltwpCDi6crLKnUJmRnXWIQOTsLbCOk22A9+fc/9S0OlJ
2DQSnbjnWwrV/rnNxVs1AezjLYv2LqGQtKG+czpuAnTap7Tv6VBIlbaN/oc1
AbvZbnwdFYnyyl/zDR3Gwetevu26MRKZ+a91+3zgI+RMOoQH95CIrcXe2iL8
ALoOuSaKBhLJDZ/yNG+9B4+exdztpSR6sXyDdnbeGDQ5lfdlPMN1p92wrGEU
VihCiJy7JCICPfTInhEoieBFNCWS6NqtIX6dUgqnpzUFeyNxfdX6btlSKUyX
1Hb8FEwix7LAyXjOOyhxL89FfNz/+w2aqoPD4LuxXLPUDc+rMSpqEwyBgdaN
9gU2JLLW885kh78F7YJ0ZcganLd0P291exC6s3KKrhrjvL3NxF+/DMA7/+HK
Ci0SCU8UB66slcCXBnP23ykIhMbe6Mnf94PBV6b7oqTY4x8f+Xzug4NDZ4ra
ugg0YeFknuTUC1O/VlWmYHMp80uNtr2Qfsa41RU7VTLP6G/phdbZyqnSTgKx
s8szMyx7gadtZPWkg0Bm39iwsxb0gufGUlF4O4EEiznzhdVi8L6gWWbUgvvp
LBV37BWDzN7/VXMzPj+msjVxFsMtqoi5ji2o78n0sxNDRxJfrW7C81y749W/
Tgw+Wb/tHG7EXmj0akRXDIeqPCtFDQTiELqlqiYG5Al5r4XYqX2jxg41DGTu
V0vWYrdU1J2LBQa6/s2lHtbj90QlbNYoZMBXqnBOqMP9lFS+fhrOF3h47cLO
7pZo8q7jfNjjE3O1uN8LdDIjFueV++NDsYXno81NzjLwMzy6uQa70OfIJb9g
BoyvyJ4O1uDzW3eIHxxj4MWefaIH2BwjU7t+PgOHWdnVh7BTZxSZFp4M/Afj
7I2k
       "]]},
     Annotation[#, "Charting`Private`Tag$8325#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{-2.0892383459040524`, -0.4065949158832203},
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 10, FontWeight -> "Plain"},
  DisplayFunction->Identity,
  Epilog->{
    PointSize[0.03], 
    RGBColor[0, 0, 1, 0.8], 
    PointBox[{{-2.468327140005611, -2.3160604364694906`}, \
{-2.3793794749416453`, -1.7081360770370544`}, {-2.115001654307264, \
-1.3122846379765745`}, {-2.2694254945452723`, -0.9077870152015558}, \
{-2.3097847795892705`, -0.4975218454349466}}]},
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"y\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"x\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  ImageSize->300,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Data above model function\"", TraditionalForm],
  PlotRange->{{-2.4859934063587317`, -2.097335387954143}, \
{-2.4069873660212178`, -0.4065949158832194}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{
  3.9094697092281246`*^9, 3.9094700176405163`*^9, 3.9094701232349167`*^9, {
   3.9094709173943233`*^9, 3.909470937594672*^9}},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"fad2f3c9-c670-4261-ac36-638714147c82"],

Cell[BoxData[
 RowBox[{"6.9858915188374695`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.541858745231209`", " ", "x"}]}]], "Print",
 CellChangeTimes->{
  3.9094697092281246`*^9, 3.9094700176405163`*^9, 3.9094701232349167`*^9, {
   3.9094709173943233`*^9, 3.909470937610283*^9}},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"2043fd59-a16e-4655-83cd-7b0fb7b4d505"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Root mean squared error (RMSE) = \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox[
      RowBox[{"\<\"5.555\"\>", "\[Times]", 
       SuperscriptBox["10", "\<\"-1\"\>"]}],
      ShowStringCharacters->False],
     0.5555051717269804,
     AutoDelete->True],
    ScientificForm[#, 4]& ]}],
  SequenceForm["Root mean squared error (RMSE) = ", 
   ScientificForm[0.5555051717269804, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{
  3.9094697092281246`*^9, 3.9094700176405163`*^9, 3.9094701232349167`*^9, {
   3.9094709173943233`*^9, 3.909470937626198*^9}},
 CellLabel->
  "During evaluation of \
In[184]:=",ExpressionUUID->"56bc5451-8df9-4504-91fa-0a8d3d53507f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CIP`CurveFit`ShowFitResult", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "\"\<AbsoluteResidualsPlot\>\"", ",", "\"\<SDFit\>\"", ",", 
     "\"\<CorrelationCoefficient\>\""}], "}"}], ",", "\[IndentingNewLine]", 
   "xyErrorTripleDataF", ",", "\[IndentingNewLine]", "curveFitInfoModel"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.9094615931537514`*^9, 3.9094615937308435`*^9}},
 CellLabel->
  "In[190]:=",ExpressionUUID->"c37d2cfc-aabe-487b-ae7b-071e94c91af7"],

Cell[CellGroupData[{

Cell[BoxData[
 GraphicsBox[{{}, 
   GraphicsComplexBox[{{1., -0.5594858883865474}, {2., -0.2666015943288158}, {
    3., 0.6975180569177823}, {4., 0.14430600046680964`}, {
    5., -0.8071390513273868}, {1., 0.}, {2., 0.}, {3., 0.}, {4., 0.}, {5., 
    0.}, {1., -0.5594858883865474}, {2., -0.2666015943288158}, {3., 
    0.6975180569177823}, {4., 0.14430600046680964`}, {
    5., -0.8071390513273868}}, {{{}, {}, {}, 
      {RGBColor[0, 0, 1], Opacity[0.3], LineBox[{6, 1}], LineBox[{7, 2}], 
       LineBox[{10, 5}]}, 
      {RGBColor[0, 0, 1], Opacity[0.3], LineBox[{8, 3}], LineBox[{9, 4}]}}, 
     {RGBColor[0, 0, 1], PointSize[0.03], AbsoluteThickness[1.6], Opacity[
      0.8], 
      StyleBox[PointBox[{11, 12, 13, 14, 15}],
       FontFamily->"Helvetica",
       FontSize->10,
       FontWeight->"Plain"]}}], {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{False, False},
  AxesLabel->{None, None},
  AxesOrigin->{0.8000000000000018, 0},
  BaseStyle->{
   FontFamily -> "Helvetica", FontSize -> 10, FontWeight -> "Plain"},
  DisplayFunction->Identity,
  Frame->{{True, True}, {True, True}},
  FrameLabel->{{
     FormBox[
      TagBox["\"y - f(x)\"", HoldForm], TraditionalForm], None}, {
     FormBox[
      TagBox["\"Index of residual\"", HoldForm], TraditionalForm], None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->300,
  Method->{
   "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "DefaultPlotStyle" -> {
      Directive[
       RGBColor[0.368417, 0.506779, 0.709798], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.880722, 0.611041, 0.142051], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.560181, 0.691569, 0.194885], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.922526, 0.385626, 0.209179], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.528488, 0.470624, 0.701351], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.772079, 0.431554, 0.102387], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.363898, 0.618501, 0.782349], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[1, 0.75, 0], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.647624, 0.37816, 0.614037], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.571589, 0.586483, 0.], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.915, 0.3325, 0.2125], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
       AbsoluteThickness[1.6]], 
      Directive[
       RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
       AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
    "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
    "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        Identity[
         Part[#, 1]], 
        Identity[
         Part[#, 2]]}& )}},
  PlotLabel->FormBox["\"Absolute residuals\"", TraditionalForm],
  PlotRange->{{0.8, 5.2}, {-0.8823719067396453, 0.7727509123300408}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Prolog->{
    Thickness[0.005], 
    GrayLevel[0], 
    LineBox[{{1., 0.}, {5, 0.}}]},
  Ticks->{Automatic, Automatic}]], "Print",
 CellChangeTimes->{3.9094697093687563`*^9, 3.909470017833003*^9, 
  3.9094701233844285`*^9, 3.909470945866517*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"f652af1a-96b8-48d4-bfbc-160e2b9a5f95"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Standard deviation of fit = \"\>", "\[InvisibleSpace]", 
   TagBox[
    InterpretationBox[
     StyleBox[
      RowBox[{"\<\"6.47\"\>", "\[Times]", 
       SuperscriptBox["10", "\<\"-1\"\>"]}],
      ShowStringCharacters->False],
     0.6470449691198377,
     AutoDelete->True],
    ScientificForm[#, 4]& ]}],
  SequenceForm["Standard deviation of fit = ", 
   ScientificForm[0.6470449691198377, 4]],
  Editable->False]], "Print",
 CellChangeTimes->{3.9094697093687563`*^9, 3.909470017833003*^9, 
  3.9094701233844285`*^9, 3.909470945898322*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"f634b338-c5a3-47a0-858f-718a1fd84c70"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"\<\"Out \"\>", "\[InvisibleSpace]", "1", 
   "\[InvisibleSpace]", "\<\" : Correlation coefficient = \"\>", 
   "\[InvisibleSpace]", "0.5470820050892784`"}],
  SequenceForm["Out ", 1, " : Correlation coefficient = ", 0.5470820050892784],
  Editable->False]], "Print",
 CellChangeTimes->{3.9094697093687563`*^9, 3.909470017833003*^9, 
  3.9094701233844285`*^9, 3.9094709459139504`*^9},
 CellLabel->
  "During evaluation of \
In[190]:=",ExpressionUUID->"83cef67e-d762-41e0-9b7f-31754b9025ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"nF", "=", 
  FractionBox["1", "6.9858915188374695`"]}], "\[IndentingNewLine]", 
 RowBox[{"KFPrime", "=", 
  RowBox[{"10", "^", "3.541858745231209`"}]}]}], "Input",
 CellChangeTimes->{{3.9094716112380004`*^9, 3.9094716542002525`*^9}},
 CellLabel->
  "In[201]:=",ExpressionUUID->"0dc15b74-1a07-48c5-a6ca-2fbe52541e71"],

Cell[BoxData["0.1431456525346118`"], "Output",
 CellChangeTimes->{3.9094716561773396`*^9},
 CellLabel->
  "Out[201]=",ExpressionUUID->"68c2dba0-b617-48b1-89c4-20d0866a2686"],

Cell[BoxData["3482.2403635544824`"], "Output",
 CellChangeTimes->{3.9094716561773396`*^9},
 CellLabel->
  "Out[202]=",ExpressionUUID->"77007f93-98e0-402e-86ec-daa72df6e4ba"]
}, Open  ]],

Cell["\<\
n_F = 0.143146
K_F\[CloseCurlyQuote] = 3482.24
R^2 = 0.547082
\[OpenCurlyDoubleQuote]Ausrei\[SZ]er\[CloseCurlyDoubleQuote] : 0.05\
\>", "Text",
 CellChangeTimes->{{3.9094715951526575`*^9, 3.909471606575386*^9}, {
  3.9094716752988887`*^9, 
  3.909471722359581*^9}},ExpressionUUID->"56568d23-e754-4b04-b548-\
6213af7a759c"]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1269, 641},
WindowMargins->{{-5.5, Automatic}, {Automatic, -5.5}},
DockedCells->{
  Cell[
   BoxData[
    DynamicModuleBox[{LinterUIDockedCell`Private`notebook$$}, 
     GraphicsBox[{
       InsetBox[
        TemplateBox[{
          PaneBox[
           StyleBox[
           "\"Code Analysis\"", FontColor -> GrayLevel[0.4], FontFamily -> 
            "Source Sans Pro", FontWeight -> Plain, FontSize -> 13, 
            StripOnInput -> False], 
           BaselinePosition -> (Baseline -> Scaled[0.65])], 
          TemplateBox[{8}, "Spacer1"], 
          PaneBox[
           
           PaneSelectorBox[{{False, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, False} -> 
             TemplateBox[{0}, "Spacer1"], {True, True} -> PaneBox[
               InterpretationBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEExpressions", "PercolateAnimator"][Medium]], 
                ProgressIndicator[Appearance -> "Percolate"], 
                BaseStyle -> {"Deploy"}], BaselinePosition -> Scaled[0.05]], {
              False, True} -> 
             DynamicModuleBox[{
               CodeInspector`LinterUI`Private`tracker$$ = 
                CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts}, 
               DynamicWrapperBox[
                DynamicBox[
                 ToBoxes[
                 CodeInspector`LinterUI`Private`tracker$$; 
                  LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
                   LinterUIDockedCell`Private`notebook$$], TraditionalForm], 
                 TrackedSymbols :> {
                  CodeInspector`LinterUI`Private`tracker$$}], 
                If[
                CodeInspector`LinterUI`Private`tracker$$ =!= 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts, CodeInspector`LinterUI`Private`tracker$$ = 
                 CodeInspector`LinterUI`Private`DynamicTriggers`\
dockedCellLintCounts]], DynamicModuleValues :> {}]}, 
            Dynamic[FEPrivate`EvaluatorStatus["Local"]; {
               CodeInspector`LinterUI`Private`varValue[
               LinterUIDockedCell`Private`notebook$$, "AnalysisInProgressQ"], 
               TrueQ[
                CodeInspector`LinterUI`Private`varValue[
                LinterUIDockedCell`Private`notebook$$, 
                 "DockedCellPresentQ"]]}], ImageSize -> Automatic], 
           BaselinePosition -> Scaled[0.15]]}, "Row", 
         DisplayFunction -> (PaneBox[
           RowBox[{
             TemplateSlotSequence[1, "\[InvisibleSpace]"]}], Alignment -> 
           Baseline]& ), InterpretationFunction -> (RowBox[{"Row", "[", 
            RowBox[{
              RowBox[{"{", 
                TemplateSlotSequence[1, ","], "}"}], ",", 
              RowBox[{"Alignment", "\[Rule]", "Baseline"}]}], "]"}]& )], 
        Offset[{8, 0}, {-1, 0}], {-1, 0}], 
       InsetBox[
        PaneSelectorBox[{
         True -> DynamicModuleBox[{
            CodeInspector`LinterUI`Private`hoverQ$$ = False, 
             CodeInspector`LinterUI`Private`mouseDownQ$$ = False, 
             CodeInspector`LinterUI`Private`fontColor$$}, 
            ButtonBox[
             DynamicWrapperBox[
              TemplateBox[{
                DynamicWrapperBox[
                 StyleBox[
                  PaneBox[
                  "\"Reanalyze Notebook\"", ContentPadding -> True, 
                   FrameMargins -> None, BaselinePosition -> Baseline], 
                  FontColor -> 
                  Dynamic[CodeInspector`LinterUI`Private`fontColor$$], 
                  FontColor -> GrayLevel[0.2], FontFamily -> 
                  "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
                  StripOnInput -> False], 
                 CodeInspector`LinterUI`Private`fontColor$$ = Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextInactiveColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "TextColor"]]], ContentPadding -> False, 
                FrameMargins -> {{9, 9}, {0, 0}}, 
                Alignment -> {Center, Center}, ImageSize -> {Automatic, 19}, 
                RoundingRadius -> 3, FrameStyle -> Dynamic[
                  Directive[
                   AbsoluteThickness[0.5], 
                   Which[
                    TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeInactiveColor"], 
                    CodeInspector`LinterUI`Private`hoverQ$$, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeHoverColor"], True, 
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "EdgeColor"]]]], Background -> Dynamic[
                  Which[
                   TrueQ[
                    Not[
                    
                    OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "ActiveQ"]]], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackInactiveColor"], 
                   And[
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                    CodeInspector`LinterUI`Private`mouseDownQ$$], 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackMouseDownColor"], 
                   CodeInspector`LinterUI`Private`hoverQ$$, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackHoverColor"], True, 
                   
                   OptionValue[{
                    ImageSize -> {Automatic, 19}, 
                    FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                    Baseline, Alignment -> {Center, Center}, Method -> 
                    "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                    "TextHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                    "BackHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                    CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                    "EdgeHoverColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                    CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, 
                    "BackColor"]]]}, "Highlighted"], 
              CodeInspector`LinterUI`Private`hoverQ$$ = 
               CurrentValue["MouseOver"]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = 
               CurrentValue["MouseButtonTest"]], 
             Appearance -> {
              "Default" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True], 
               "Pressed" -> 
               Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 
                  0, 0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 
                  0, 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 
                  255}, {255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                 ImageResolution -> {72, 72}, Interleaving -> True]}, 
             BaselinePosition -> Baseline, 
             ButtonFunction :> (
              If[OptionValue[{
                  ImageSize -> {Automatic, 19}, 
                   FrameMargins -> {9 {1, 1}, 0 {1, 1}}, BaselinePosition -> 
                   Baseline, Alignment -> {Center, Center}, Method -> 
                   "Preemptive", "ActiveQ" -> True, "TextColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonText"], 
                   "TextHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextHover"], "TextInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonTextInactive"], "BackColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonBack"], 
                   "BackHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackHover"], "BackMouseDownColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackMouseDown"], "BackInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonBackInactive"], "EdgeColor" -> 
                   CodeInspector`LinterUI`Private`colorData["ButtonEdge"], 
                   "EdgeHoverColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeHover"], "EdgeInactiveColor" -> 
                   CodeInspector`LinterUI`Private`colorData[
                    "ButtonEdgeInactive"]}, {Method -> "Queued"}, "ActiveQ"] =!= 
                False, 
                CodeInspector`LinterUI`Private`attachAnalysisAction[
                 EvaluationNotebook[]]]; 
              CodeInspector`LinterUI`Private`mouseDownQ$$ = False), 
             ContentPadding -> False, Evaluator -> Automatic, Method -> 
             "Queued"], DynamicModuleValues :> {}], False -> ButtonBox[
            TemplateBox[{
              StyleBox[
              "\"Analyze Notebook\"", FontColor -> GrayLevel[0.2], FontFamily -> 
               "Source Sans Pro", FontWeight -> Plain, FontSize -> 14, 
               StripOnInput -> False], ImageSize -> {Automatic, 19}, 
              FrameMargins -> {{9, 9}, {0, 0}}, BaselinePosition -> Baseline, 
              Alignment -> {Center, Center}, Background -> GrayLevel[1], 
              FrameStyle -> Dynamic[
                If[
                 CurrentValue["MouseOver"], 
                 Hue[0.55, 0.82, 0.87], 
                 GrayLevel[0.8]]]}, "Highlighted"], 
            Appearance -> {
             "Default" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Hover" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True], "Pressed" -> 
              Image[RawArray["UnsignedInteger8",{{{255, 255, 255, 255}, {0, 0,
                  0, 255}, {255, 255, 255, 255}}, {{0, 0, 0, 255}, {0, 0, 0, 
                 0}, {0, 0, 0, 255}}, {{255, 255, 255, 255}, {0, 0, 0, 255}, {
                 255, 255, 255, 255}}}], "Byte", ColorSpace -> "RGB", 
                ImageResolution -> {72, 72}, Interleaving -> True]}, 
            ButtonFunction :> (CurrentValue[
                EvaluationNotebook[], DockedCells] = 
              With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                   EvaluationNotebook[], DockedCells]}, 
                Pick[LinterUIDockedCell`Private`dockedCells, 
                 Map[Quiet[
                    Options[#, CellTags]] =!= {
                   CellTags -> "CodeAnalysisDockedCell"}& , 
                  LinterUIDockedCell`Private`dockedCells]]]; 
             Needs["CodeInspector`"]; 
             CodeInspector`AttachAnalysis[
              LinterUIDockedCell`Private`notebook$$]), Evaluator -> Automatic,
             Method -> "Queued"]}, 
         Dynamic[FEPrivate`EvaluatorStatus["Local"]; TrueQ[
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"]]], 
         ImageSize -> Automatic], 
        Offset[{-26, 0}, {1, 0}], {1, 0}], 
       TagBox[
        TagBox[
         TooltipBox[{{
            GrayLevel[0.6], 
            DiskBox[
             Offset[{-11, 0}, {1, 0}], 
             Offset[6]]}, {
            GrayLevel[0.97], 
            AbsoluteThickness[1.5], 
            CapForm["Round"], 
            LineBox[{{
               Offset[{-13, 2}, {1, 0}], 
               Offset[{-9, -2}, {1, 0}]}, {
               Offset[{-13, -2}, {1, 0}], 
               Offset[{-9, 2}, {1, 0}]}}]}}, "\"Close analysis\"", 
          TooltipDelay -> 0, TooltipStyle -> "TextStyling"], 
         Annotation[#, "Close analysis", "Tooltip"]& ], 
        EventHandlerTag[{"MouseClicked" :> (Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "UIAttachedCells"]]]; Map[NotebookDelete, 
             Flatten[
              CodeInspector`LinterUI`Private`varValue[
              LinterUIDockedCell`Private`notebook$$, All, 
               "CleanCellBracketMarker"]]]; CurrentValue[
              EvaluationNotebook[], DockedCells] = 
            With[{LinterUIDockedCell`Private`dockedCells = CurrentValue[
                 EvaluationNotebook[], DockedCells]}, 
              Pick[LinterUIDockedCell`Private`dockedCells, 
               Map[Quiet[
                  Options[#, CellTags]] =!= {
                 CellTags -> "CodeAnalysisDockedCell"}& , 
                LinterUIDockedCell`Private`dockedCells]]]; 
           CodeInspector`LinterUI`Private`applyToVar[Remove, {
              EvaluationNotebook[], All}]; 
           CodeInspector`LinterUI`Private`varSet[{
             LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, 
             False]), Method -> "Preemptive", PassEventsDown -> Automatic, 
          PassEventsUp -> True}]]}, AspectRatio -> Full, 
      ImageSize -> {Full, 23}, PlotRange -> {{-1, 1}, {-1, 1}}], 
     Deinitialization :> 
     CodeInspector`LinterUI`Private`varSet[{
       LinterUIDockedCell`Private`notebook$$, "DockedCellPresentQ"}, False], 
     DynamicModuleValues :> {}, 
     Initialization :> ({
       LinterUIDockedCell`Private`dockedCellSeverityCountsButton[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]]] := 
        With[{LinterUIDockedCell`Private`formatIcon = 
           Show[#, ImageSize -> {13, 9}, BaselinePosition -> Scaled[-0.2]]& }, 
          ActionMenu[
           Highlighted[
            Row[{
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`notebook, "exclamSize" -> 12, 
               FontSize -> 14, FontWeight -> Plain], 
              Spacer[2], 
              LinterUIDockedCell`Private`formatIcon[
               CodeInspector`LinterUI`Private`iconData["DownChevron"][
                CodeInspector`LinterUI`Private`colorData["UIDark"]]]}], 
            ImageSize -> {Automatic, 19}, BaselinePosition -> Baseline, 
            Background -> White, Frame -> True, FrameStyle -> Dynamic[
              If[
               CurrentValue["MouseOver"], 
               Hue[0.55, 0.82, 0.87], 
               GrayLevel[0.8]]], FrameMargins -> {6 {1, 1}, {1, 1}}, 
            Alignment -> {Center, Baseline}], 
           Map[
           LinterUIDockedCell`Private`dockedCellMenuItem[
            LinterUIDockedCell`Private`notebook, #]& , 
            CodeInspector`LinterUI`Private`varValue[
            LinterUIDockedCell`Private`notebook, All, "Cell"]], Appearance -> 
           None]], LinterUIDockedCell`Private`dockedCellMenuItem[
          Pattern[LinterUIDockedCell`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[LinterUIDockedCell`Private`cell, 
           Blank[CellObject]]] := With[{}, Graphics[{
             Inset[
              With[{LinterUIDockedCell`Private`expressionString = First[
                  FrontEndExecute[
                   FrontEnd`ExportPacket[
                    First[
                    CodeInspector`LinterUI`Private`varValue[
                    LinterUIDockedCell`Private`notebook, 
                    LinterUIDockedCell`Private`cell, "CellContents"]], 
                    "InputText"]]]}, {
               LinterUIDockedCell`Private`noLineBreaks = 
                StringReplace[
                 LinterUIDockedCell`Private`expressionString, "\n" -> " "]}, {
               LinterUIDockedCell`Private`previewString = 
                StringTake[LinterUIDockedCell`Private`noLineBreaks, {1, 
                   UpTo[LinterUIDockedCell`Private`$previewLength]}]}, 
               CodeInspector`LinterUI`Private`styleData["FixedWidth"][
                If[
                StringLength[LinterUIDockedCell`Private`expressionString] > 
                 LinterUIDockedCell`Private`$previewLength, 
                 StringDrop[LinterUIDockedCell`Private`previewString, -1] <> 
                 "\[Ellipsis]", 
                 LinterUIDockedCell`Private`previewString]]], {-1, 0}, {-1, 
              0}], 
             Inset[
              CodeInspector`LinterUI`Private`lintSeverityCountsIconRow[
              LinterUIDockedCell`Private`cell], {1, 0}, {1, 0}]}, 
            ImageSize -> {300, 25}, AspectRatio -> Full, 
            PlotRange -> {{-1, 1}, {-1, 1}}, ImagePadding -> None] :> (
           SelectionMove[LinterUIDockedCell`Private`cell, All, Cell]; 
           With[{LinterUIDockedCell`Private`nb = 
              ParentNotebook[LinterUIDockedCell`Private`cell]}, 
             FrontEndExecute[
              FrontEnd`FrontEndToken[
              LinterUIDockedCell`Private`nb, "OpenSelectionParents"]]]; 
           SelectionMove[LinterUIDockedCell`Private`cell, After, Cell])], 
        LinterUIDockedCell`Private`$previewLength = 28, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`notebook, 
            Blank[NotebookObject]], All, 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], 
           Pattern[CodeInspector`LinterUI`Private`name, 
            Blank[String]]}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Apply[CodeInspector`LinterUI`Private`function, 
          Join[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           Hold[CodeInspector`LinterUI`Private`args]]], Null, 
        CodeInspector`LinterUI`Private`applyToVar[
          Pattern[CodeInspector`LinterUI`Private`function, 
           Blank[]], {
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]], All}, 
          Pattern[CodeInspector`LinterUI`Private`args, 
           BlankNullSequence[]]] := 
        Map[Apply[CodeInspector`LinterUI`Private`function, 
           Join[
            ToHeldExpression[#], 
            Hold[CodeInspector`LinterUI`Private`args]]]& , 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], All, 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Map[Symbol, 
          
          Names[(CodeInspector`LinterUI`Private`varNameString[
             CodeInspector`LinterUI`Private`notebook] <> "*") <> 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := Symbol[
          CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`nameArguments, 
           CodeInspector`LinterUI`Private`name]], Null, 
        CodeInspector`LinterUI`Private`varValue[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], All] := Map[Symbol, 
          Names[
          CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> "*"]], 
        CodeInspector`LinterUI`Private`varSet[{
           Pattern[CodeInspector`LinterUI`Private`nameArguments, 
            BlankSequence[]]}, 
          Pattern[CodeInspector`LinterUI`Private`value, 
           Blank[]]] := Apply[Set, 
          Append[
           ToHeldExpression[
            CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments]], 
           CodeInspector`LinterUI`Private`value]], 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]]] := ((
           "CodeInspector`LinterUI`Private`Vars`" <> "$$") <> 
          With[{CodeInspector`LinterUI`Private`nbID = 
             Last[CodeInspector`LinterUI`Private`notebook]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`nbID], 
             StringReplace[CodeInspector`LinterUI`Private`nbID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`nbID]]]) <> "$$", Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
            Replace[
             ParentNotebook[CodeInspector`LinterUI`Private`cell], $Failed -> 
             EvaluationNotebook[]]] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]]] := (
          CodeInspector`LinterUI`Private`varNameString[
           CodeInspector`LinterUI`Private`notebook] <> 
          With[{CodeInspector`LinterUI`Private`cellID = 
             First[CodeInspector`LinterUI`Private`cell]}, 
            If[
             StringQ[CodeInspector`LinterUI`Private`cellID], 
             StringReplace[CodeInspector`LinterUI`Private`cellID, "-" -> "$"], 
             ToString[CodeInspector`LinterUI`Private`cellID]]]) <> "$$", Null,
         CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`notebook, 
           Blank[NotebookObject]], 
          Pattern[CodeInspector`LinterUI`Private`cell, 
           Blank[CellObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := 
        CodeInspector`LinterUI`Private`varNameString[
          CodeInspector`LinterUI`Private`notebook, 
           CodeInspector`LinterUI`Private`cell] <> 
         CodeInspector`LinterUI`Private`name, Null, 
        CodeInspector`LinterUI`Private`varNameString[
          Pattern[CodeInspector`LinterUI`Private`nameArguments, 
           BlankSequence[]], 
          Pattern[CodeInspector`LinterUI`Private`lint, 
           Blank[CodeInspector`InspectionObject]], 
          Pattern[CodeInspector`LinterUI`Private`name, 
           Blank[String]]] := ((
           CodeInspector`LinterUI`Private`varNameString[
            CodeInspector`LinterUI`Private`nameArguments] <> Apply[Sequence, 
             Riffle[
              Map[StringDelete[
                ToString[#], 
                Alternatives["[", "]", "{", "}", ",", " "]]& , 
               CodeInspector`LinterUI`Private`extractFirstList[
                Last[CodeInspector`LinterUI`Private`lint][
                CodeParser`Source]]], "$"]]) <> "$$") <> 
         CodeInspector`LinterUI`Private`name, 
        CodeInspector`LinterUI`Private`extractFirstList[
          Pattern[CodeInspector`LinterUI`Private`expr, 
           Blank[]]] := FirstCase[CodeInspector`LinterUI`Private`expr, 
          Blank[List], {}, {0, Infinity}]}; 
      LinterUIDockedCell`Private`notebook$$ = EvaluationNotebook[]), 
     UnsavedVariables :> {LinterUIDockedCell`Private`notebook$$}]], 
   CellFrame -> {{0, 0}, {1, 1}}, CellFrameMargins -> {{0, 0}, {0, 0}}, 
   CellFrameColor -> GrayLevel[0.85], Background -> GrayLevel[0.97], CellTags -> 
   "CodeAnalysisDockedCell"]},
Magnification:>1. Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (January 30, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"6ef317a8-a207-475b-aad5-6ddd29bd5167"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 333, 7, 64, "Input",ExpressionUUID->"7c611307-e64f-42bd-b3a3-7d937439c58b"],
Cell[CellGroupData[{
Cell[916, 31, 160, 3, 98, "Title",ExpressionUUID->"f540d006-b76c-475b-9725-efafae05986d"],
Cell[CellGroupData[{
Cell[1101, 38, 170, 3, 54, "Subsection",ExpressionUUID->"23c42fdf-a6c5-487f-9fab-aa2442894a11"],
Cell[CellGroupData[{
Cell[1296, 45, 690, 15, 78, "Input",ExpressionUUID->"c3a37374-358a-4449-906e-463b4c1b6fae"],
Cell[1989, 62, 1870, 45, 52, "Output",ExpressionUUID->"b8e72357-3afb-4e0a-add6-e434ddcd9df6"],
Cell[3862, 109, 2216, 48, 71, "Output",ExpressionUUID->"b151b832-ba62-4a6b-ac02-f7db98a231f3"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6115, 162, 304, 6, 43, "Input",ExpressionUUID->"aca6701e-cbae-47c3-8cf3-727e046db36a"],
Cell[6422, 170, 1205, 24, 52, "Output",ExpressionUUID->"131967a1-b0fb-440e-a6bb-03cb0536cfde"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7676, 200, 189, 3, 54, "Subsection",ExpressionUUID->"45a7428c-9cb3-48f8-8c09-ed0daf86139c"],
Cell[7868, 205, 477, 9, 28, "Input",ExpressionUUID->"18a721fe-4fb0-4ff3-a2ce-1c716ad48fcb"],
Cell[8348, 216, 601, 14, 43, "Input",ExpressionUUID->"987eeff2-a033-46f7-b91b-729c1394a1cf"],
Cell[8952, 232, 385, 8, 62, "Input",ExpressionUUID->"c921101b-1b87-4a80-9ea2-70e091f4038a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9374, 245, 197, 3, 54, "Subsection",ExpressionUUID->"f0f1bc52-c104-4af8-a225-5b96770b165e"],
Cell[9574, 250, 367, 8, 45, "Input",ExpressionUUID->"420fed4e-2ce5-4890-82e8-37f4d0c08326"],
Cell[CellGroupData[{
Cell[9966, 262, 2326, 46, 228, "Input",ExpressionUUID->"b665598e-dd9e-4078-9649-557c870ba151"],
Cell[12295, 310, 1135, 19, 32, "Output",ExpressionUUID->"d9d44191-d3b4-44b3-af48-d1b4128c25b7"],
Cell[13433, 331, 1454, 29, 52, "Output",ExpressionUUID->"d78fe310-c4af-4e6c-ad46-423eb37d5db1"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[14936, 366, 185, 3, 54, "Subsection",ExpressionUUID->"27460db7-2624-4277-8517-f946d3618a5f"],
Cell[CellGroupData[{
Cell[15146, 373, 179, 3, 45, "Subsubsection",ExpressionUUID->"24d7974a-bba6-4d7f-9a4b-80dd7b6a356c"],
Cell[CellGroupData[{
Cell[15350, 380, 1112, 32, 149, "Input",ExpressionUUID->"d6667419-6e4f-4c31-8af7-95d8fce2562b"],
Cell[16465, 414, 447, 9, 32, "Output",ExpressionUUID->"4593ff58-e160-4272-ae18-34a65d843020"],
Cell[16915, 425, 576, 12, 32, "Output",ExpressionUUID->"23ce1068-2703-4b72-bad2-a4e58a40192c"],
Cell[17494, 439, 472, 9, 32, "Output",ExpressionUUID->"e2126b21-cce9-4a31-8255-f840e696c4b8"],
Cell[17969, 450, 580, 12, 32, "Output",ExpressionUUID->"7d527121-48fd-4535-912d-18c2ea7befae"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[18598, 468, 188, 3, 45, "Subsubsection",ExpressionUUID->"5195828b-f612-4b7c-be22-e927faea779a"],
Cell[CellGroupData[{
Cell[18811, 475, 1226, 33, 149, "Input",ExpressionUUID->"05f85088-e8ec-49ad-9007-a7b724fa560e"],
Cell[20040, 510, 490, 9, 32, "Output",ExpressionUUID->"e8ab403a-7191-4167-9974-2174306dab15"],
Cell[20533, 521, 506, 9, 32, "Output",ExpressionUUID->"e7dbd396-f8c8-4687-80ee-132363a74be8"],
Cell[21042, 532, 505, 9, 32, "Output",ExpressionUUID->"d3c5fc39-5140-4fa5-873f-91869a332713"],
Cell[21550, 543, 521, 10, 32, "Output",ExpressionUUID->"88fe9481-41da-4438-8995-ceb568b182e6"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[22132, 560, 248, 4, 54, "Subsection",ExpressionUUID->"7d5d36d6-8c98-44df-99d9-0304b3ef53ea"],
Cell[22383, 566, 2953, 74, 162, "Input",ExpressionUUID->"1ab91db4-c516-4b5a-99b8-2c88d510dfb0"],
Cell[CellGroupData[{
Cell[25361, 644, 1985, 45, 333, "Input",ExpressionUUID->"b69151d1-9226-47db-a1b6-7020572e82b9"],
Cell[27349, 691, 670, 18, 32, "Output",ExpressionUUID->"ff877c36-34b6-49c1-b05a-428b2e4846b1"],
Cell[CellGroupData[{
Cell[28044, 713, 3912, 88, 219, "Print",ExpressionUUID->"0b4f7dc7-39a5-4529-9db5-5aec98d6ebed"],
Cell[31959, 803, 448, 9, 22, "Print",ExpressionUUID->"23bc12bf-c900-4851-abba-f5bb7fde0a06"],
Cell[32410, 814, 811, 21, 23, "Print",ExpressionUUID->"4112f7c3-89ee-492f-b312-499bc9c30238"],
Cell[33224, 837, 4388, 113, 213, "Print",ExpressionUUID->"4e3511b8-f874-4417-8c08-c2b0b50a785d"],
Cell[37615, 952, 803, 21, 23, "Print",ExpressionUUID->"0a15ce81-cbf5-44f7-8f29-4b025163d6fd"],
Cell[38421, 975, 630, 13, 22, "Print",ExpressionUUID->"dde96445-c273-4700-aab8-35f7e7f6cd0a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[39100, 994, 382, 9, 84, "Input",ExpressionUUID->"2f79fa06-b781-48f3-8673-c8877f4bcd1a"],
Cell[39485, 1005, 198, 3, 32, "Output",ExpressionUUID->"b6cc7904-6e33-4dbe-ac57-145a1f3ce6c4"],
Cell[39686, 1010, 216, 4, 32, "Output",ExpressionUUID->"537463ba-39d9-46b8-9a11-4b82c07cd62c"]
}, Open  ]],
Cell[39917, 1017, 381, 9, 104, "Text",ExpressionUUID->"f2086461-0e9b-4f2d-9f48-919132d508c4"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40335, 1031, 265, 7, 81, "Subsection",ExpressionUUID->"cef898eb-7914-4c59-8bc6-9e60a6bcdede"],
Cell[40603, 1040, 2759, 73, 143, "Input",ExpressionUUID->"52f7fff0-1f71-4802-aff0-3aa863968205"],
Cell[CellGroupData[{
Cell[43387, 1117, 1524, 37, 257, "Input",ExpressionUUID->"5b077003-be5f-4c7a-bcb8-272281a68d68"],
Cell[CellGroupData[{
Cell[44936, 1158, 4146, 92, 212, "Print",ExpressionUUID->"fad2f3c9-c670-4261-ac36-638714147c82"],
Cell[49085, 1252, 380, 8, 22, "Print",ExpressionUUID->"2043fd59-a16e-4655-83cd-7b0fb7b4d505"],
Cell[49468, 1262, 743, 20, 23, "Print",ExpressionUUID->"56bc5451-8df9-4504-91fa-0a8d3d53507f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[50260, 1288, 513, 11, 86, "Input",ExpressionUUID->"c37d2cfc-aabe-487b-ae7b-071e94c91af7"],
Cell[CellGroupData[{
Cell[50798, 1303, 4470, 114, 213, "Print",ExpressionUUID->"f652af1a-96b8-48d4-bfbc-160e2b9a5f95"],
Cell[55271, 1419, 700, 19, 23, "Print",ExpressionUUID->"f634b338-c5a3-47a0-858f-718a1fd84c70"],
Cell[55974, 1440, 534, 11, 22, "Print",ExpressionUUID->"83cef67e-d762-41e0-9b7f-31754b9025ac"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[56557, 1457, 341, 7, 66, "Input",ExpressionUUID->"0dc15b74-1a07-48c5-a6ca-2fbe52541e71"],
Cell[56901, 1466, 173, 3, 32, "Output",ExpressionUUID->"68c2dba0-b617-48b1-89c4-20d0866a2686"],
Cell[57077, 1471, 173, 3, 32, "Output",ExpressionUUID->"77007f93-98e0-402e-86ec-daa72df6e4ba"]
}, Open  ]],
Cell[57265, 1477, 332, 9, 104, "Text",ExpressionUUID->"56568d23-e754-4b04-b548-6213af7a759c"]
}, Open  ]]
}, Open  ]]
}
]
*)

